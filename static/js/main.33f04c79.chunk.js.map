{"version":3,"sources":["components/Status/images/food.svg","components/Status/images/no-data.svg","reducers/restaurantReducer.js","reducers/index.js","actions/types.js","store.js","components/Container/index.jsx","components/Search/index.jsx","actions/index.js","components/Heading/index.jsx","components/RestaurantTable/index.jsx","components/Status/index.jsx","components/Application/index.jsx","index.js"],"names":["module","exports","initialState","restaurants","refineText","combineReducers","state","action","type","payload","text","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Container","children","className","connect","getCityRestaurants","cityName","dispatch","a","fetch","res","json","data","formattedData","map","name","area","address","price","console","error","setRefineText","placeholder","onChange","event","value","target","defaultValue","Heading","length","refineRegExp","RegExp","filter","test","key","Array","isArray","src","NoData","alt","Food","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33f04c79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/food.e669dac1.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-data.cb61ac4f.svg\";","import { GET_RESTAURANTS, SET_REFINE_TEXT } from '../actions/types';\n\nconst initialState = {\n  restaurants: null,\n  refineText: '',\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_RESTAURANTS:\n      return {\n        ...state,\n        restaurants: action.payload,\n      };\n    case SET_REFINE_TEXT:\n      return {\n        ...state,\n        refineText: action.text,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport restaurantReducer from './restaurantReducer';\n\nexport default combineReducers({\n  restaurants: restaurantReducer,\n});\n","export const GET_RESTAURANTS = 'GET_RESTAURANTS';\nexport const SET_REFINE_TEXT = 'SET_REFINE_TEXT';\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nexport default store;\n","import React from 'react';\nimport './Container.css';\n\nconst Container = ({ children }) => {\n  return <div className=\"app-container\">{children}</div>;\n};\n\nexport default Container;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './Search.css';\nimport { getCityRestaurants, setRefineText } from '../../actions';\n\nexport const Search = ({ getCityRestaurants, setRefineText, refineText }) => {\n  const handleCityChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    getCityRestaurants(value);\n  };\n\n  const handleRefineChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setRefineText(value);\n  };\n\n  return (\n    <div className=\"search-container\">\n      <input type=\"text\" placeholder=\"City\" onChange={handleCityChange} />\n      <input\n        type=\"text\"\n        placeholder=\"Refine\"\n        defaultValue={refineText}\n        onChange={handleRefineChange}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  restaurants: state.restaurants.restaurants,\n  refineText: state.restaurants.refineText,\n});\n\nexport default connect(mapStateToProps, { getCityRestaurants, setRefineText })(\n  Search,\n);\n","import { GET_RESTAURANTS, SET_REFINE_TEXT } from './types';\n\nexport const getCityRestaurants = (cityName) => async (dispatch) => {\n  if (!cityName) {\n    dispatch({ type: GET_RESTAURANTS, payload: [] });\n    return;\n  }\n\n  try {\n    const res = await fetch(\n      `http://opentable.herokuapp.com/api/restaurants?city=${cityName}`,\n    );\n    const data = await res.json();\n    const formattedData = data.restaurants.map(\n      ({ name, area, address, price }) => ({\n        name,\n        area,\n        address,\n        price,\n      }),\n    );\n    dispatch({ type: GET_RESTAURANTS, payload: formattedData });\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const setRefineText = (text) => ({\n  type: SET_REFINE_TEXT,\n  text,\n});\n","import React from 'react';\nimport './Heading.css';\n\nconst Heading = () => {\n  return (\n    <header>\n      <h1 className=\"main-heading\">Restaurant Explorer</h1>\n      <h2 className=\"sub-heading\">Find Delicious Food Near You.</h2>\n    </header>\n  );\n};\n\nexport default Heading;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './RestaurantTable.css';\n\nexport const RestaurantTable = ({ restaurants, refineText }) => {\n  if (restaurants?.length > 0) {\n    const refineRegExp = new RegExp(refineText, 'i');\n    return (\n      <div className=\"table-container\">\n        <table className=\"restaurant-table\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Area</th>\n              <th>Address</th>\n              <th>Price</th>\n            </tr>\n          </thead>\n          {restaurants\n            .filter(({ name, address, area }) => {\n              return (\n                refineRegExp.test(name) ||\n                refineRegExp.test(address) ||\n                refineRegExp.test(area)\n              );\n            })\n            .map(({ name, area, address, price }) => {\n              return (\n                <tr key={name}>\n                  <td>{name}</td>\n                  <td>{area}</td>\n                  <td>{address}</td>\n                  <td>{price}</td>\n                </tr>\n              );\n            })}\n        </table>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst mapStateToProps = (state) => ({\n  restaurants: state.restaurants.restaurants,\n  refineText: state.restaurants.refineText,\n});\n\nexport default connect(mapStateToProps)(RestaurantTable);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './Status.css';\nimport Food from './images/food.svg';\nimport NoData from './images/no-data.svg';\n\nexport const Status = ({ restaurants }) => {\n  if (!Array.isArray(restaurants)) {\n    return <img className=\"status-image\" src={Food} alt=\"Plate of Food\" />;\n  }\n\n  if (restaurants.length === 0) {\n    return (\n      <>\n        <h2 className=\"no-data-text\">\n          No restaurants found with these parameters.\n        </h2>\n        <img className=\"status-image\" src={NoData} alt=\"No Data Found\" />\n      </>\n    );\n  }\n\n  return null;\n};\n\nconst mapStateToProps = (state) => ({\n  restaurants: state.restaurants.restaurants,\n});\n\nexport default connect(mapStateToProps)(Status);\n","import React from 'react';\nimport 'fontsource-roboto';\nimport { Provider } from 'react-redux';\nimport store from '../../store';\nimport './App.css';\nimport Container from '../Container';\nimport ConnectedSearch from '../Search';\nimport Heading from '../Heading';\nimport ConnectedRestaurantTable from '../RestaurantTable';\nimport ConnectedStatus from '../Status';\n\nconst App = () => (\n  <Provider store={store}>\n    <Container>\n      <Heading />\n      <ConnectedSearch />\n      <section className=\"results\">\n        <ConnectedRestaurantTable />\n        <ConnectedStatus />\n      </section>\n    </Container>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/Application';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}